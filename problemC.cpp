#include <bits/stdc++.h>
#define Weakoying ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define int long long
#define pii pair<int, int>
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pqueue priority_queue
#define pb push_back
#define F first
#define S second
#define max(a, b) (a > b ? a : b)
#define min(a, b) (a < b ? a : b)
#define cmax(a, b) a = (a > b ? a : b)
#define cmin(a, b) a = (a < b ? a : b)
#define put(x) cout << x << endl;
#define DB(x) cerr << #x << " " << x << endl
#define all(v) v.begin(), v.end()
#define stop system("pause");
#define MEM(x, n) memset(x, n, sizeof(x));
#define lowbit(x) x &(-x)
#if !LOCAL
#define endl "\n"
#pragma optimize("Ofast", "unroll-all-loops")
#endif
const int INF = 0x3f3f3f3f3f3f3f3f;
const int P = 1e9+7;

using namespace std;
/******************************************************************************/
#define MAXN 200005
#define MAXM 1000005 
int n, m;
vector<array<int, 9>> ans;

struct matrix {
    vector<vector<int>> a {
        {0, 0}, {0, 0}
    };

    matrix operator *(matrix _a) {
        matrix tmp;

        for (int i = 0; i < 2; i++) {
            for (int k = 0; k < 2; k++) {
                for (int j = 0; j < 2; j++) {
                    tmp.a[i][j] += a[i][k] * _a.a[k][j];
                }
            }
        }

        return tmp;
    }
};

void sol() {
    for (int a = 0; a <= 9; a++)
        for (int b = 0; b <= 9; b++)
            for (int c = 0; c <= 9; c++)
                for (int d = 0; d <= 9; d++)
                    for (int e = 0; e <= 9; e++)
                        for (int f = 0; f <= 9; f++)
                            for (int g = 0; g <= 9; g++)
                                for (int h = 0; h <= 9; h++) {
                                    matrix x, y, z;
                                    x.a = vector<vector<int>> {{a, b}, {c, d}};
                                    y.a = vector<vector<int>> {{e, f}, {g, h}};
                                    z = x * y;
                                    if (z.a[0][0] == 10 * a + e && z.a[0][1] == 10 * b + f && z.a[1][0] == 10 * c + g && z.a[1][1] == 10 * d + h)    {
                                        ans.pb({a, b, c, d, e, f, g, h});
                                        cout << a << b << c << d << e << f << g << h << endl;
                                    }
                                }
    
    for (auto it: ans) {
        cout << "{";
        for (int i = 0; i < 8; i++)
            cout << it[i] << ",}"[i == 7];
        cout << ',' << endl;
    }
}

vector<vector<int>> owo {
{0,0,0,0,0,0,0,0},
{2,2,3,2,8,4,6,8},
{2,2,4,4,4,4,8,8},
{2,2,6,3,8,2,6,9},
{2,2,7,5,6,2,7,9},
{2,2,8,7,4,2,8,9},
{2,2,9,9,2,2,9,9},
{2,3,2,2,8,6,4,8},
{2,3,3,5,2,6,6,8},
{2,3,4,3,8,3,4,9},
{2,3,5,6,5,3,5,9},
{2,3,6,9,2,3,6,9},
{2,4,2,4,4,8,4,8},
{2,4,3,3,8,4,3,9},
{2,4,4,7,4,4,4,9},
{2,5,3,6,5,5,3,9},
{2,6,2,3,8,6,2,9},
{2,6,3,9,2,6,3,9},
{2,7,2,5,6,7,2,9},
{2,8,2,7,4,8,2,9},
{2,9,2,9,2,9,2,9},
{3,2,6,2,9,2,6,8},
{3,2,7,3,8,2,7,8},
{3,2,8,4,7,2,8,8},
{3,2,9,5,6,2,9,8},
{3,3,3,3,6,6,6,6},
{3,3,4,2,9,3,4,8},
{3,3,6,5,6,3,6,8},
{3,3,8,8,3,3,8,8},
{3,4,3,2,9,4,3,8},
{3,4,4,4,7,4,4,8},
{3,4,5,6,5,4,5,8},
{3,4,6,3,9,2,3,9},
{3,4,6,8,3,4,6,8},
{3,4,8,7,7,2,4,9},
{3,5,4,6,5,5,4,8},
{3,6,2,2,9,6,2,8},
{3,6,3,5,6,6,3,8},
{3,6,4,3,9,3,2,9},
{3,6,4,8,3,6,4,8},
{3,6,6,9,6,3,3,9},
{3,7,2,3,8,7,2,8},
{3,8,2,4,7,8,2,8},
{3,8,3,8,3,8,3,8},
{3,8,4,7,7,4,2,9},
{3,9,2,5,6,9,2,8},
{4,2,4,2,8,4,8,4},
{4,2,8,3,8,2,8,7},
{4,4,2,2,8,8,4,4},
{4,4,4,3,8,4,4,7},
{4,4,7,7,4,4,7,7},
{4,5,5,6,5,5,5,7},
{4,7,4,7,4,7,4,7},
{4,8,2,3,8,8,2,7},
{5,2,7,2,9,2,7,6},
{5,2,9,3,8,2,9,6},
{5,3,3,2,8,6,6,2},
{5,3,6,3,8,3,6,6},
{5,5,6,6,5,5,6,6},
{5,6,3,3,8,6,3,6},
{5,6,5,6,5,6,5,6},
{5,6,6,5,8,3,3,8},
{5,6,7,9,2,6,7,6},
{5,7,2,2,9,7,2,6},
{5,7,6,9,2,7,6,6},
{5,9,2,3,8,9,2,6},
{6,3,5,2,9,3,5,5},
{6,4,5,3,8,4,5,5},
{6,5,3,2,9,5,3,5},
{6,5,4,3,8,5,4,5},
{6,5,5,4,7,5,5,5},
{6,5,6,5,6,5,6,5},
{6,5,7,6,5,5,7,5},
{6,5,8,7,4,5,8,5},
{6,5,9,8,3,5,9,5},
{6,6,5,5,6,6,5,5},
{6,7,5,6,5,7,5,5},
{6,8,5,7,4,8,5,5},
{6,9,5,8,3,9,5,5},
{7,2,8,2,9,2,8,4},
{7,4,4,2,9,4,4,4},
{7,4,7,4,7,4,7,4},
{7,4,8,3,9,2,4,7},
{7,5,8,6,5,5,8,4},
{7,7,4,4,7,7,4,4},
{7,8,2,2,9,8,2,4},
{7,8,4,3,9,4,2,7},
{7,8,5,6,5,8,5,4},
{8,3,8,3,8,3,8,3},
{8,4,6,3,8,4,6,3},
{8,5,9,6,5,5,9,3},
{8,6,4,3,8,6,4,3},
{8,8,3,3,8,8,3,3},
{8,9,5,6,5,9,5,3},
{9,2,9,2,9,2,9,2},
{9,3,6,2,9,3,6,2},
{9,6,3,2,9,6,3,2},
{9,6,6,3,9,3,3,6},
{9,6,7,5,6,6,7,2},
{9,7,6,5,6,7,6,2},
{9,9,2,2,9,9,2,2}
};

signed main() {
    Weakoying;
    int t = 1;

    for (auto it: owo) {
        for (auto hehe: it)
            cout << hehe;
        cout << endl;
    }
    return 0;

    //while (cin >> t)
	{
    	while (t--) {
            sol();
        }
    }
        
    return 0;
}